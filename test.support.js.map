{"version":3,"sources":["test.support.js"],"names":["assert","require","firs","equal","undefined","test","ClassA","testA","deepEqual","console","log"],"mappings":";AACA,IAAMA,SAASC,QAAS,QAAT,CAAf;AACA,IAAMC,OAAOD,QAAS,WAAT,CAAb;;AAEAD,OAAOG,KAAP,CAAcD,KAAM,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,CAAN,CAAd,EAAmC,CAAnC,EAAsC,iBAAtC;;AAEAF,OAAOG,KAAP,CAAcD,KAAM,CAAE,KAAF,EAAS,IAAT,CAAN,CAAd,EAAuC,KAAvC,EAA8C,qBAA9C;;AAEAF,OAAOG,KAAP,CAAcD,KAAM,CAAE,EAAF,EAAM,MAAN,EAAc,EAAd,CAAN,CAAd,EAA2C,MAA3C,EAAmD,sBAAnD;;AAEAF,OAAOG,KAAP,CAAcD,KAAM,CAAE,IAAF,EAAQE,SAAR,EAAmB,CAAnB,CAAN,CAAd,EAA8C,CAA9C,EAAiD,iBAAjD;;AAEAJ,OAAOG,KAAP,CAAcD,KAAM,CAAE,IAAF,EAAQ,mBAAY,OAAZ,CAAR,EAA+B,IAA/B,CAAN,CAAd,EAA6D,mBAAY,OAAZ,CAA7D,EAAoF,iBAApF;;AAEA,IAAIG,OAAO,SAASA,IAAT,GAAgB,CAAE,OAAO,MAAP,CAAe,CAA5C,C;AACMC,M;AACL,mBAAc,6CAAG,C;AACR,GAAE,OAAO,OAAP,CAAiB,C;;;AAG7B,IAAIC,QAAQ,IAAID,MAAJ,EAAZ;AACAN,OAAOQ,SAAP,CAAkBN,KAAM,CAAE,IAAF,EAAQE,SAAR,EAAmBG,KAAnB,EAA0BF,IAA1B,CAAN,CAAlB,EAA4DE,KAA5D,EAAmE,iBAAnE;;AAEAE,QAAQC,GAAR,CAAa,IAAb","file":"test.support.js","sourcesContent":["\r\nconst assert = require( \"assert\" );\r\nconst firs = require( \"./firs.js\" );\r\n\r\nassert.equal( firs( [ 1, 2, 3 ] ), 1, \"should return 1\" );\r\n\r\nassert.equal( firs( [ false, true ] ), false, \"should return false\" );\r\n\r\nassert.equal( firs( [ \"\", \"yeah\", { } ] ), \"yeah\", \"should return 'yeah'\" );\r\n\r\nassert.equal( firs( [ null, undefined, 2 ] ), 2, \"should return 2\" );\r\n\r\nassert.equal( firs( [ null, Symbol.for( \"hello\" ), true ] ), Symbol.for( \"hello\" ), \"should be equal\" );\r\n\r\nlet test = function test( ){ return \"test\" };\r\nclass ClassA{\r\n\tconstructor( ){ }\r\n\tmethod( ){ return \"hello\"; }\r\n}\r\n\r\nlet testA = new ClassA( );\r\nassert.deepEqual( firs( [ null, undefined, testA, test ] ), testA, \"should be equal\" );\r\n\r\nconsole.log( \"ok\" );\r\n"]}